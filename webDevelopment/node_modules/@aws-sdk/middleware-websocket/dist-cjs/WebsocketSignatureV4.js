"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebsocketSignatureV4 = void 0;
const protocol_http_1 = require("@aws-sdk/protocol-http");
const utils_1 = require("./utils");
class WebsocketSignatureV4 {
    constructor(options) {
        this.signer = options.signer;
    }
    presign(originalRequest, options = {}) {
        return this.signer.presign(originalRequest, options);
    }
    async sign(toSign, options) {
        if (protocol_http_1.HttpRequest.isInstance(toSign) && (0, utils_1.isWebSocketRequest)(toSign)) {
            const signedRequest = await this.signer.presign({ ...toSign, body: "" }, {
                expiresIn: 60,
                unsignableHeaders: new Set(Object.keys(toSign.headers).filter((header) => header !== "host")),
            });
            return {
                ...signedRequest,
                body: toSign.body,
            };
        }
        else {
            return this.signer.sign(toSign, options);
        }
    }
}
exports.WebsocketSignatureV4 = WebsocketSignatureV4;
